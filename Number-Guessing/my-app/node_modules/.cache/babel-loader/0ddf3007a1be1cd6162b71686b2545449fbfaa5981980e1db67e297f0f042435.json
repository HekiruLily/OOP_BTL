{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PAnh\\\\Number Guessing\\\\number\\\\my-app\\\\src\\\\Components\\\\Level.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../CSS/Level.css';\nimport Play from './Play';\nimport End from './End';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst levels = [{\n  attempts: 10,\n  image: '/img/4.jpg'\n}, {\n  attempts: 7,\n  image: '/img/3.jpg'\n}, {\n  attempts: 5,\n  image: '/img/5.jpg'\n}];\nconst levelConfig = [{\n  time: 60\n}, {\n  time: 45\n}, {\n  time: 30\n}];\nconst Level = ({\n  level\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const minNum = 1;\n  const maxNum = 100;\n  const [answer, setAnswer] = useState(Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum);\n  const [remainingAttempts, setRemainingAttempts] = useState(levels[level - 1].attempts);\n  const [feedback, setFeedback] = useState('');\n  const [guess, setGuess] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [guessedCorrectly, setGuessedCorrectly] = useState(false);\n  const [isGameEnded, setIsGameEnded] = useState(false);\n  const time = levelConfig[level - 1].time;\n  const handleGuess = () => {\n    if (!guess || isNaN(guess) || guess < minNum || guess > maxNum) {\n      setFeedback('Please enter a valid number!');\n      return;\n    }\n    const numericGuess = Number(guess);\n    if (numericGuess === answer) {\n      setFeedback('Correct! You guessed it!');\n      setGuessedCorrectly(true);\n      setGameOver(true);\n      setIsGameEnded(true);\n    } else if (numericGuess > answer) {\n      setFeedback('Too high!');\n    } else {\n      setFeedback('Too low!');\n    }\n    setRemainingAttempts(prev => prev - 1);\n    if (remainingAttempts - 1 <= 0) {\n      setFeedback('Game Over! Out of attempts.');\n      setGameOver(true);\n      setIsGameEnded(true);\n    }\n  };\n  const handleRestart = () => {\n    setAnswer(Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum);\n    setRemainingAttempts(levels[level - 1].attempts);\n    setFeedback('');\n    setGuess('');\n    setGameOver(false);\n    setGuessedCorrectly(false);\n    setIsGameEnded(false);\n  };\n  const handleExit = () => {\n    navigate('/'); // Adjust route as needed\n  };\n  const calculateScore = () => {\n    return guessedCorrectly ? remainingAttempts * 10 : 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"level-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"level-panel active\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: guessedCorrectly ? 'level-heading-success' : 'level-heading',\n        children: [\"Level \", level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guess-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: guess,\n          onChange: e => setGuess(e.target.value),\n          placeholder: \"Enter your guess\",\n          disabled: gameOver\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGuess,\n          disabled: gameOver,\n          children: \"Guess\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `feedback ${guessedCorrectly ? 'feedback-success' : gameOver ? 'feedback-error' : ''}`,\n        children: feedback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"attempts-left\",\n        children: [\"Attempts Left: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: remainingAttempts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: levels[level - 1].image,\n        alt: `Level ${level}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"play-container\",\n        children: /*#__PURE__*/_jsxDEV(Play, {\n          initialTime: time,\n          attemptsLeft: remainingAttempts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleExit,\n          className: \"exit-btn\",\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRestart,\n          className: \"restart-btn\",\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), isGameEnded && /*#__PURE__*/_jsxDEV(End, {\n      score: calculateScore(),\n      attempts: levels[level - 1].attempts - remainingAttempts,\n      guessedCorrectly: guessedCorrectly,\n      answer: answer,\n      onClose: handleRestart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(Level, \"Pz8RjwUvO1vpBISLAoE1j0DQiQQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Level;\nexport default Level;\nvar _c;\n$RefreshReg$(_c, \"Level\");","map":{"version":3,"names":["React","useState","useNavigate","Play","End","jsxDEV","_jsxDEV","levels","attempts","image","levelConfig","time","Level","level","_s","navigate","minNum","maxNum","answer","setAnswer","Math","floor","random","remainingAttempts","setRemainingAttempts","feedback","setFeedback","guess","setGuess","gameOver","setGameOver","guessedCorrectly","setGuessedCorrectly","isGameEnded","setIsGameEnded","handleGuess","isNaN","numericGuess","Number","prev","handleRestart","handleExit","calculateScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","disabled","onClick","src","alt","initialTime","attemptsLeft","score","onClose","_c","$RefreshReg$"],"sources":["C:/Users/PAnh/Number Guessing/number/my-app/src/Components/Level.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../CSS/Level.css';\r\nimport Play from './Play';\r\nimport End from './End';\r\n\r\nconst levels = [\r\n    { attempts: 10, image: '/img/4.jpg' },\r\n    { attempts: 7, image: '/img/3.jpg' },\r\n    { attempts: 5, image: '/img/5.jpg' }\r\n];\r\n\r\nconst levelConfig = [\r\n    { time: 60 },\r\n    { time: 45 },\r\n    { time: 30 }\r\n];\r\n\r\nconst Level = ({ level }) => {\r\n    const navigate = useNavigate();\r\n    const minNum = 1;\r\n    const maxNum = 100;\r\n\r\n    const [answer, setAnswer] = useState(\r\n        Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum\r\n    );\r\n    const [remainingAttempts, setRemainingAttempts] = useState(levels[level - 1].attempts);\r\n    const [feedback, setFeedback] = useState('');\r\n    const [guess, setGuess] = useState('');\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const [guessedCorrectly, setGuessedCorrectly] = useState(false);\r\n    const [isGameEnded, setIsGameEnded] = useState(false);\r\n\r\n    const time = levelConfig[level - 1].time;\r\n\r\n    const handleGuess = () => {\r\n        if (!guess || isNaN(guess) || guess < minNum || guess > maxNum) {\r\n            setFeedback('Please enter a valid number!');\r\n            return;\r\n        }\r\n\r\n        const numericGuess = Number(guess);\r\n        if (numericGuess === answer) {\r\n            setFeedback('Correct! You guessed it!');\r\n            setGuessedCorrectly(true);\r\n            setGameOver(true);\r\n            setIsGameEnded(true);\r\n        } else if (numericGuess > answer) {\r\n            setFeedback('Too high!');\r\n        } else {\r\n            setFeedback('Too low!');\r\n        }\r\n\r\n        setRemainingAttempts((prev) => prev - 1);\r\n\r\n        if (remainingAttempts - 1 <= 0) {\r\n            setFeedback('Game Over! Out of attempts.');\r\n            setGameOver(true);\r\n            setIsGameEnded(true);\r\n        }\r\n    };\r\n\r\n    const handleRestart = () => {\r\n        setAnswer(Math.floor(Math.random() * (maxNum - minNum + 1)) + minNum);\r\n        setRemainingAttempts(levels[level - 1].attempts);\r\n        setFeedback('');\r\n        setGuess('');\r\n        setGameOver(false);\r\n        setGuessedCorrectly(false);\r\n        setIsGameEnded(false);\r\n    };\r\n\r\n    const handleExit = () => {\r\n        navigate('/'); // Adjust route as needed\r\n    };\r\n\r\n    const calculateScore = () => {\r\n        return guessedCorrectly ? (remainingAttempts * 10) : 0;\r\n    };\r\n\r\n    return (\r\n        <div className=\"level-container\">\r\n            <div className=\"level-panel active\">\r\n                <h2 className={guessedCorrectly ? 'level-heading-success' : 'level-heading'}>\r\n                    Level {level}\r\n                </h2>\r\n                <div className=\"guess-container\">\r\n                    <input\r\n                        type=\"number\"\r\n                        value={guess}\r\n                        onChange={(e) => setGuess(e.target.value)}\r\n                        placeholder=\"Enter your guess\"\r\n                        disabled={gameOver}\r\n                    />\r\n                    <button onClick={handleGuess} disabled={gameOver}>\r\n                        Guess\r\n                    </button>\r\n                </div>\r\n                <p className={`feedback ${guessedCorrectly ? 'feedback-success' : gameOver ? 'feedback-error' : ''}`}>\r\n                    {feedback}\r\n                </p>\r\n                <p className=\"attempts-left\">\r\n                    Attempts Left: <span>{remainingAttempts}</span>\r\n                </p>\r\n                <img src={levels[level - 1].image} alt={`Level ${level}`} />\r\n                <div className=\"play-container\">\r\n                    <Play initialTime={time} attemptsLeft={remainingAttempts} />\r\n                </div>\r\n                <div className=\"button-group\">\r\n                    <button onClick={handleExit} className=\"exit-btn\">\r\n                        Exit\r\n                    </button>\r\n                    <button onClick={handleRestart} className=\"restart-btn\">\r\n                        Restart Game\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {isGameEnded && (\r\n                <End\r\n                    score={calculateScore()}\r\n                    attempts={levels[level - 1].attempts - remainingAttempts}\r\n                    guessedCorrectly={guessedCorrectly}\r\n                    answer={answer}\r\n                    onClose={handleRestart}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Level;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}