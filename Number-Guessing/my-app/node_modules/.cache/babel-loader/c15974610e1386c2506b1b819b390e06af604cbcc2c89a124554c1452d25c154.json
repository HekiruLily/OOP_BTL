{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PAnh\\\\Number Guessing\\\\num\\\\my-app\\\\src\\\\Components\\\\Level.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Choose.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Level = ({\n  level,\n  attempts,\n  image,\n  onNextLevel\n}) => {\n  _s();\n  const [guess, setGuess] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [remainingAttempts, setRemainingAttempts] = useState(attempts);\n  const [answer] = useState(Math.floor(Math.random() * 100) + 1);\n  const handleGuess = () => {\n    const numGuess = Number(guess);\n    if (numGuess === answer) {\n      setFeedback('ðŸŽ‰ Congratulations! You guessed the correct number!');\n    } else {\n      setRemainingAttempts(remainingAttempts - 1);\n      if (remainingAttempts - 1 === 0) {\n        setFeedback(`ðŸ˜ž Game Over! The number was ${answer}.`);\n      } else {\n        setFeedback(numGuess > answer ? 'ðŸ“‰ Too high!' : 'ðŸ“ˆ Too low!');\n      }\n    }\n    setGuess('');\n  };\n  const handleRestart = () => {\n    setRemainingAttempts(attempts);\n    setFeedback('');\n    setGuess('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"level-panel active\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Level \", level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: guess,\n      onChange: e => setGuess(e.target.value),\n      placeholder: \"Enter your guess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGuess,\n      children: \"Guess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Attempts Left: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: remainingAttempts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"Level Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRestart,\n      children: \"Restart Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onNextLevel,\n      children: \"Next Level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Level, \"Yi3g89ZaYHHVtMq4RLoEdU4xhag=\");\n_c = Level;\nexport default Level;\nvar _c;\n$RefreshReg$(_c, \"Level\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Level","level","attempts","image","onNextLevel","_s","guess","setGuess","feedback","setFeedback","remainingAttempts","setRemainingAttempts","answer","Math","floor","random","handleGuess","numGuess","Number","handleRestart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/PAnh/Number Guessing/num/my-app/src/Components/Level.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../CSS/Choose.css';\r\n\r\nconst Level = ({ level, attempts, image, onNextLevel }) => {\r\n  const [guess, setGuess] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [remainingAttempts, setRemainingAttempts] = useState(attempts);\r\n  const [answer] = useState(Math.floor(Math.random() * 100) + 1);\r\n\r\n  const handleGuess = () => {\r\n    const numGuess = Number(guess);\r\n    if (numGuess === answer) {\r\n      setFeedback('ðŸŽ‰ Congratulations! You guessed the correct number!');\r\n    } else {\r\n      setRemainingAttempts(remainingAttempts - 1);\r\n      if (remainingAttempts - 1 === 0) {\r\n        setFeedback(`ðŸ˜ž Game Over! The number was ${answer}.`);\r\n      } else {\r\n        setFeedback(numGuess > answer ? 'ðŸ“‰ Too high!' : 'ðŸ“ˆ Too low!');\r\n      }\r\n    }\r\n    setGuess('');\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setRemainingAttempts(attempts);\r\n    setFeedback('');\r\n    setGuess('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"level-panel active\">\r\n      <h2>Level {level}</h2>\r\n      <input\r\n        type=\"number\"\r\n        value={guess}\r\n        onChange={(e) => setGuess(e.target.value)}\r\n        placeholder=\"Enter your guess\"\r\n      />\r\n      <button onClick={handleGuess}>Guess</button>\r\n      <p>{feedback}</p>\r\n      <p>Attempts Left: <span>{remainingAttempts}</span></p>\r\n      <img src={image} alt=\"Level Image\" />\r\n      <button onClick={handleRestart}>Restart Game</button>\r\n      <button onClick={onNextLevel}>Next Level</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Level;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}