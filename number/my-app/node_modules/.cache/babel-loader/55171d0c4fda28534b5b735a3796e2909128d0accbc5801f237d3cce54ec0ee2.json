{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import '../CSS/Level.css';\n\n// const LevelGame = ({ maxAttempts }) => {\n//   const [attempts, setAttempts] = useState(maxAttempts);\n//   const [feedback, setFeedback] = useState('');\n//   const [answer, setAnswer] = useState(Math.floor(Math.random() * 100) + 1);\n//   const navigate = useNavigate();\n\n//   const handleGuess = (guess) => {\n//     if (guess === answer) {\n//       setFeedback('ðŸŽ‰ Congratulations! You guessed the correct number!');\n//       setAttempts(maxAttempts);\n//     } else if (attempts <= 1) {\n//       setFeedback(`ðŸ˜ž Game Over! The number was ${answer}.`);\n//     } else {\n//       setFeedback(guess > answer ? 'ðŸ“‰ Too high!' : 'ðŸ“ˆ Too low!');\n//       setAttempts(attempts - 1);\n//     }\n//     document.getElementById('guess-input').value = '';\n//   };\n\n//   const handleRestart = () => {\n//     setAttempts(maxAttempts);\n//     setFeedback('');\n//     setAnswer(Math.floor(Math.random() * 100) + 1);\n//   };\n\n//   return (\n//     <div className=\"level-panel active\">\n//       <h2>Level Game</h2>\n//       <input type=\"number\" id=\"guess-input\" placeholder=\"Enter your guess\" />\n//       <button id=\"guess-button\" onClick={() => handleGuess(Number(document.getElementById('guess-input').value))}>Guess</button>\n//       <p id=\"feedback\">{feedback}</p>\n//       <p>Attempts Left: <span id=\"attempts\">{attempts}</span></p>\n//       <button id=\"restart-button\" className={feedback === '' ? 'hidden' : ''} onClick={handleRestart}> Restart Game</button>\n//       <button className=\"exit-btn\" onClick={() => navigate('/choose')}>Exit</button>\n//     </div>\n//   );\n// };\n\n// export default LevelGame;","map":{"version":3,"names":[],"sources":["C:/Users/PAnh/Number Guessing/num/my-app/src/Components/LevelGame.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import '../CSS/Level.css';\r\n\r\n// const LevelGame = ({ maxAttempts }) => {\r\n//   const [attempts, setAttempts] = useState(maxAttempts);\r\n//   const [feedback, setFeedback] = useState('');\r\n//   const [answer, setAnswer] = useState(Math.floor(Math.random() * 100) + 1);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleGuess = (guess) => {\r\n//     if (guess === answer) {\r\n//       setFeedback('ðŸŽ‰ Congratulations! You guessed the correct number!');\r\n//       setAttempts(maxAttempts);\r\n//     } else if (attempts <= 1) {\r\n//       setFeedback(`ðŸ˜ž Game Over! The number was ${answer}.`);\r\n//     } else {\r\n//       setFeedback(guess > answer ? 'ðŸ“‰ Too high!' : 'ðŸ“ˆ Too low!');\r\n//       setAttempts(attempts - 1);\r\n//     }\r\n//     document.getElementById('guess-input').value = '';\r\n//   };\r\n\r\n//   const handleRestart = () => {\r\n//     setAttempts(maxAttempts);\r\n//     setFeedback('');\r\n//     setAnswer(Math.floor(Math.random() * 100) + 1);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"level-panel active\">\r\n//       <h2>Level Game</h2>\r\n//       <input type=\"number\" id=\"guess-input\" placeholder=\"Enter your guess\" />\r\n//       <button id=\"guess-button\" onClick={() => handleGuess(Number(document.getElementById('guess-input').value))}>Guess</button>\r\n//       <p id=\"feedback\">{feedback}</p>\r\n//       <p>Attempts Left: <span id=\"attempts\">{attempts}</span></p>\r\n//       <button id=\"restart-button\" className={feedback === '' ? 'hidden' : ''} onClick={handleRestart}> Restart Game</button>\r\n//       <button className=\"exit-btn\" onClick={() => navigate('/choose')}>Exit</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LevelGame;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}