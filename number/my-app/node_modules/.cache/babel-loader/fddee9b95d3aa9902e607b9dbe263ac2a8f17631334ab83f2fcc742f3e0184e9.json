{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PAnh\\\\Number Guessing\\\\num\\\\my-app\\\\src\\\\Components\\\\Level.js\",\n  _s = $RefreshSig$();\nimport '../CSS/Level.css';\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Level = () => {\n  _s();\n  const {\n    levelId\n  } = useParams();\n  const levels = [{\n    level: 1,\n    attempts: 7,\n    image: './img/hinh-nen-desktop.jpg'\n  }, {\n    level: 2,\n    attempts: 5,\n    image: './img/ngam-va-tai-hinh-nen-dep-cho-may-tinh-556444149b46f6.jpg'\n  }, {\n    level: 3,\n    attempts: 3,\n    image: './img/2.jpg'\n  }];\n  const currentLevel = levels[levelId - 1]; // Adjust index to match the level\n\n  const [attempts, setAttempts] = useState(currentLevel.attempts);\n  const [guess, setGuess] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [gameOver, setGameOver] = useState(false);\n  const [answer, setAnswer] = useState(() => generateRandomNumber());\n  function generateRandomNumber() {\n    return Math.floor(Math.random() * 100) + 1;\n  }\n  const handleGuess = () => {\n    // Game logic here...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"level-panel active\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Level \", currentLevel.level]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: currentLevel.image,\n      alt: `Level ${currentLevel.level} Image`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Attempts Left: \", attempts]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: guess,\n      onChange: e => setGuess(e.target.value),\n      placeholder: \"Enter your guess\",\n      disabled: gameOver\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGuess,\n      disabled: gameOver,\n      children: \"Guess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: feedback\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Level, \"bk6Wm+E8034njQbX/8UfGjLFDnc=\", false, function () {\n  return [useParams];\n});\n_c = Level;\nexport default Level;\nvar _c;\n$RefreshReg$(_c, \"Level\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Level","_s","levelId","levels","level","attempts","image","currentLevel","setAttempts","guess","setGuess","feedback","setFeedback","gameOver","setGameOver","answer","setAnswer","generateRandomNumber","Math","floor","random","handleGuess","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","value","onChange","e","target","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/PAnh/Number Guessing/num/my-app/src/Components/Level.js"],"sourcesContent":["\r\nimport '../CSS/Level.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Level = () => {\r\n  const { levelId } = useParams();\r\n  const levels = [\r\n    { level: 1, attempts: 7, image: './img/hinh-nen-desktop.jpg' },\r\n    { level: 2, attempts: 5, image: './img/ngam-va-tai-hinh-nen-dep-cho-may-tinh-556444149b46f6.jpg' },\r\n    { level: 3, attempts: 3, image: './img/2.jpg' },\r\n  ];\r\n\r\n  const currentLevel = levels[levelId - 1];  // Adjust index to match the level\r\n\r\n  const [attempts, setAttempts] = useState(currentLevel.attempts);\r\n  const [guess, setGuess] = useState('');\r\n  const [feedback, setFeedback] = useState('');\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [answer, setAnswer] = useState(() => generateRandomNumber());\r\n\r\n  function generateRandomNumber() {\r\n    return Math.floor(Math.random() * 100) + 1;\r\n  }\r\n\r\n  const handleGuess = () => {\r\n    // Game logic here...\r\n  };\r\n\r\n  return (\r\n    <div className=\"level-panel active\">\r\n      <h2>Level {currentLevel.level}</h2>\r\n      <img src={currentLevel.image} alt={`Level ${currentLevel.level} Image`} />\r\n      <p>Attempts Left: {attempts}</p>\r\n      <input\r\n        type=\"number\"\r\n        value={guess}\r\n        onChange={(e) => setGuess(e.target.value)}\r\n        placeholder=\"Enter your guess\"\r\n        disabled={gameOver}\r\n      />\r\n      <button onClick={handleGuess} disabled={gameOver}>Guess</button>\r\n      <p>{feedback}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Level;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}